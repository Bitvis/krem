

'''
# Copyright (C) 2018  Bitvis AS
#
# This file is part of KREM.
#
# KREM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# KREM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with KREM.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Bitvis AS 
# www.bitvis.no
# info@bitvis.no
'''


'''
description:
    Lists available tasks, jobs, etc..
'''

import argparse
import os
from krempack.core.commands import list
from krempack.common import constants as c

from krempack.core import plugin
from krempack.core import cli_plugin
from krempack.common import kremtree

plugin_handler = plugin.PluginHandler('cli')
plugins_initialized = False

def readArgs():
    global plugins_initialized
    parser = argparse.ArgumentParser(description=
                                    "List available targets:",
                                    prog='krem list') 

    # Add arguments here
    group = parser.add_mutually_exclusive_group()
    group.add_argument("-t", "--task", default=False, action='store_true', help="List available tasks")
    group.add_argument("-j", "--job", default=False, action='store_true', help="List available jobs")

    if plugins_initialized:
        plugin_handler.execute_hook("cli_list_setup_arguments", {"parser": parser})

    args = parser.parse_args()

    return args

if __name__ == '__main__':
    if kremtree.find_krem_root(os.getcwd()):
        plugins_initialized = cli_plugin.setup_cli_plugins(plugin_handler)

    args = readArgs()

    if plugins_initialized:
        plugin_handler.execute_hook("cli_list_execute_arguments_pre_cmd", {"args": args})

    if args.task:
        list.list_tasks()
    elif args.job:
        list.list_jobs()

    if plugins_initialized:
        plugin_handler.execute_hook("cli_list_execute_arguments_post_cmd", {"args": args})



